{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ravi\\\\Desktop\\\\loginform\\\\loginform\\\\2\\\\delivery-boy-app\\\\src\\\\components\\\\DeliveryBoyPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeliveryBoyPage = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [status, setStatus] = useState(\"Fetching location...\");\n  const [selectedOrder, setSelectedOrder] = useState(null);\n\n  // Fetch orders assigned to the delivery boy\n  const fetchOrders = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:4000/api/order/list\");\n      setOrders(response.data); // Assume this returns an array of orders\n    } catch (error) {\n      console.error(\"Error fetching orders:\", error);\n    }\n  };\n\n  // Post live location to the backend\n  const updateLocation = async () => {\n    if (!navigator.geolocation) {\n      setStatus(\"Geolocation is not supported by this browser.\");\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(async position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setStatus(\"Location updated!\");\n      if (selectedOrder) {\n        try {\n          await axios.post(\"http://localhost:4000/api/delivery/update-location\", {\n            lat: latitude,\n            lon: longitude,\n            orderId: selectedOrder._id\n          });\n        } catch (error) {\n          console.error(\"Error updating location:\", error);\n          setStatus(\"Failed to update location.\");\n        }\n      }\n    }, error => {\n      console.error(\"Error fetching location:\", error);\n      setStatus(\"Failed to fetch location.\");\n    });\n  };\n  useEffect(() => {\n    fetchOrders();\n\n    // Update location every 15 seconds\n    const interval = setInterval(updateLocation, 15000);\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, [selectedOrder]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Delivery Boy Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Order ID: \", order._id, \" - \", order.customerAddress, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedOrder(order),\n          children: \"Select Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, order._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(DeliveryBoyPage, \"JVycRYZ19MUq6lD8fVD4lcWBO5A=\");\n_c = DeliveryBoyPage;\nexport default DeliveryBoyPage;\nvar _c;\n$RefreshReg$(_c, \"DeliveryBoyPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","DeliveryBoyPage","_s","orders","setOrders","status","setStatus","selectedOrder","setSelectedOrder","fetchOrders","response","get","data","error","console","updateLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","post","lat","lon","orderId","_id","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","map","order","customerAddress","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ravi/Desktop/loginform/loginform/2/delivery-boy-app/src/components/DeliveryBoyPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst DeliveryBoyPage = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [status, setStatus] = useState(\"Fetching location...\");\r\n  const [selectedOrder, setSelectedOrder] = useState(null);\r\n\r\n  // Fetch orders assigned to the delivery boy\r\n  const fetchOrders = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:4000/api/order/list\");\r\n      setOrders(response.data); // Assume this returns an array of orders\r\n    } catch (error) {\r\n      console.error(\"Error fetching orders:\", error);\r\n    }\r\n  };\r\n\r\n  // Post live location to the backend\r\n  const updateLocation = async () => {\r\n    if (!navigator.geolocation) {\r\n      setStatus(\"Geolocation is not supported by this browser.\");\r\n      return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      async (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n\r\n        setStatus(\"Location updated!\");\r\n\r\n        if (selectedOrder) {\r\n          try {\r\n            await axios.post(\"http://localhost:4000/api/delivery/update-location\", {\r\n              lat: latitude,\r\n              lon: longitude,\r\n              orderId: selectedOrder._id,\r\n            });\r\n          } catch (error) {\r\n            console.error(\"Error updating location:\", error);\r\n            setStatus(\"Failed to update location.\");\r\n          }\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error(\"Error fetching location:\", error);\r\n        setStatus(\"Failed to fetch location.\");\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOrders();\r\n\r\n    // Update location every 15 seconds\r\n    const interval = setInterval(updateLocation, 15000);\r\n\r\n    return () => clearInterval(interval); // Cleanup interval on unmount\r\n  }, [selectedOrder]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Delivery Boy Dashboard</h2>\r\n      <p>Status: {status}</p>\r\n      <h3>Orders</h3>\r\n      <ul>\r\n        {orders.map((order) => (\r\n          <li key={order._id}>\r\n            Order ID: {order._id} - {order.customerAddress}\r\n            <button onClick={() => setSelectedOrder(order)}>Select Order</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeliveryBoyPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}