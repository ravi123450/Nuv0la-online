{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ravi\\\\Desktop\\\\loginform\\\\loginform\\\\2\\\\delivery-boy-app\\\\src\\\\components\\\\DeliveryBoyPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport maplibregl from \"maplibre-gl\";\nimport \"maplibre-gl/dist/maplibre-gl.css\";\nimport \"./DeliveryBoyPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeliveryBoyPage = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [mapInstance, setMapInstance] = useState(null);\n  const [deliveryMarker, setDeliveryMarker] = useState(null);\n  const [status, setStatus] = useState(\"Fetching location...\");\n  const backendUrl = \"http://localhost:4000\"; // Backend URL\n  const deliverySpeedKmh = 50; // Delivery speed for ETA\n\n  // Fetch orders for delivery boy\n  const fetchOrders = async () => {\n    try {\n      const response = await axios.get(`${backendUrl}/api/order/list`);\n      if (response.data.success) {\n        setOrders(response.data.data);\n      } else {\n        console.error(\"Failed to fetch orders:\", response.data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching orders:\", error);\n    }\n  };\n\n  // Update the delivery boy's location\n  const updateLocation = async order => {\n    if (!navigator.geolocation) {\n      setStatus(\"Geolocation is not supported by this browser.\");\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(async position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      try {\n        // Post the updated location to the backend\n        await axios.post(`${backendUrl}/api/delivery/update-location`, {\n          lat: latitude,\n          lon: longitude,\n          orderId: order._id\n        });\n        setStatus(`Location updated for Order ID: ${order._id}`);\n\n        // Update the delivery marker on the map\n        if (deliveryMarker) {\n          deliveryMarker.setLngLat([longitude, latitude]);\n        } else {\n          const marker = new maplibregl.Marker({\n            color: \"blue\"\n          }).setLngLat([longitude, latitude]).setPopup(new maplibregl.Popup().setText(\"Your Location\")).addTo(mapInstance);\n          setDeliveryMarker(marker);\n        }\n      } catch (error) {\n        console.error(\"Error updating location:\", error);\n      }\n    }, error => {\n      console.error(\"Error fetching location:\", error);\n      setStatus(\"Failed to fetch location.\");\n    });\n  };\n  const initializeMap = order => {\n    const mapContainer = document.getElementById(\"map\");\n    if (mapInstance) {\n      mapInstance.remove();\n    }\n    const map = new maplibregl.Map({\n      container: mapContainer,\n      style: \"https://api.maptiler.com/maps/streets/style.json?key=EjBcSB0AjZylSCnAuoxl\",\n      center: [order.address.lon, order.address.lat],\n      zoom: 12\n    });\n    new maplibregl.Marker({\n      color: \"red\"\n    }).setLngLat([order.address.lon, order.address.lat]).setPopup(new maplibregl.Popup().setText(\"Delivery Destination\")).addTo(map);\n    setMapInstance(map);\n  };\n  const handleSelectOrder = order => {\n    setSelectedOrder(order);\n    initializeMap(order);\n    updateLocation(order);\n  };\n  useEffect(() => {\n    fetchOrders();\n    const interval = setInterval(() => {\n      if (selectedOrder) {\n        updateLocation(selectedOrder);\n      }\n    }, 15000);\n    return () => clearInterval(interval);\n  }, [selectedOrder]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Delivery Boy Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orders.length > 0 ? orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Order ID: \", order._id, \" - \", order.address.street, \", \", order.address.city, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSelectOrder(order),\n          children: \"Select Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)]\n      }, order._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No orders available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), selectedOrder && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Live Location for Order ID: \", selectedOrder._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\",\n        style: {\n          width: \"100%\",\n          height: \"500px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(DeliveryBoyPage, \"wkdjXikTWNbfc6KK2+LDsKLQ4FQ=\");\n_c = DeliveryBoyPage;\nexport default DeliveryBoyPage;\nvar _c;\n$RefreshReg$(_c, \"DeliveryBoyPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","maplibregl","jsxDEV","_jsxDEV","DeliveryBoyPage","_s","orders","setOrders","selectedOrder","setSelectedOrder","mapInstance","setMapInstance","deliveryMarker","setDeliveryMarker","status","setStatus","backendUrl","deliverySpeedKmh","fetchOrders","response","get","data","success","console","error","updateLocation","order","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","post","lat","lon","orderId","_id","setLngLat","marker","Marker","color","setPopup","Popup","setText","addTo","initializeMap","mapContainer","document","getElementById","remove","map","Map","container","style","center","address","zoom","handleSelectOrder","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","length","street","city","onClick","id","width","height","_c","$RefreshReg$"],"sources":["C:/Users/ravi/Desktop/loginform/loginform/2/delivery-boy-app/src/components/DeliveryBoyPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport maplibregl from \"maplibre-gl\";\r\nimport \"maplibre-gl/dist/maplibre-gl.css\";\r\nimport \"./DeliveryBoyPage.css\";\r\n\r\nconst DeliveryBoyPage = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [selectedOrder, setSelectedOrder] = useState(null);\r\n  const [mapInstance, setMapInstance] = useState(null);\r\n  const [deliveryMarker, setDeliveryMarker] = useState(null);\r\n  const [status, setStatus] = useState(\"Fetching location...\");\r\n  const backendUrl = \"http://localhost:4000\"; // Backend URL\r\n  const deliverySpeedKmh = 50; // Delivery speed for ETA\r\n\r\n  // Fetch orders for delivery boy\r\n  const fetchOrders = async () => {\r\n    try {\r\n      const response = await axios.get(`${backendUrl}/api/order/list`);\r\n      if (response.data.success) {\r\n        setOrders(response.data.data);\r\n      } else {\r\n        console.error(\"Failed to fetch orders:\", response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching orders:\", error);\r\n    }\r\n  };\r\n\r\n  // Update the delivery boy's location\r\n  const updateLocation = async (order) => {\r\n    if (!navigator.geolocation) {\r\n      setStatus(\"Geolocation is not supported by this browser.\");\r\n      return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      async (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n\r\n        try {\r\n          // Post the updated location to the backend\r\n          await axios.post(`${backendUrl}/api/delivery/update-location`, {\r\n            lat: latitude,\r\n            lon: longitude,\r\n            orderId: order._id,\r\n          });\r\n\r\n          setStatus(`Location updated for Order ID: ${order._id}`);\r\n\r\n          // Update the delivery marker on the map\r\n          if (deliveryMarker) {\r\n            deliveryMarker.setLngLat([longitude, latitude]);\r\n          } else {\r\n            const marker = new maplibregl.Marker({ color: \"blue\" })\r\n              .setLngLat([longitude, latitude])\r\n              .setPopup(new maplibregl.Popup().setText(\"Your Location\"))\r\n              .addTo(mapInstance);\r\n            setDeliveryMarker(marker);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error updating location:\", error);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error(\"Error fetching location:\", error);\r\n        setStatus(\"Failed to fetch location.\");\r\n      }\r\n    );\r\n  };\r\n\r\n  const initializeMap = (order) => {\r\n    const mapContainer = document.getElementById(\"map\");\r\n\r\n    if (mapInstance) {\r\n      mapInstance.remove();\r\n    }\r\n\r\n    const map = new maplibregl.Map({\r\n      container: mapContainer,\r\n      style: \"https://api.maptiler.com/maps/streets/style.json?key=EjBcSB0AjZylSCnAuoxl\",\r\n      center: [order.address.lon, order.address.lat],\r\n      zoom: 12,\r\n    });\r\n\r\n    new maplibregl.Marker({ color: \"red\" })\r\n      .setLngLat([order.address.lon, order.address.lat])\r\n      .setPopup(new maplibregl.Popup().setText(\"Delivery Destination\"))\r\n      .addTo(map);\r\n\r\n    setMapInstance(map);\r\n  };\r\n\r\n  const handleSelectOrder = (order) => {\r\n    setSelectedOrder(order);\r\n    initializeMap(order);\r\n    updateLocation(order);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOrders();\r\n\r\n    const interval = setInterval(() => {\r\n      if (selectedOrder) {\r\n        updateLocation(selectedOrder);\r\n      }\r\n    }, 15000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [selectedOrder]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Delivery Boy Dashboard</h2>\r\n      <p>Status: {status}</p>\r\n      <h3>Orders</h3>\r\n      <ul>\r\n        {orders.length > 0 ? (\r\n          orders.map((order) => (\r\n            <li key={order._id}>\r\n              Order ID: {order._id} - {order.address.street}, {order.address.city}\r\n              <button onClick={() => handleSelectOrder(order)}>Select Order</button>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No orders available.</p>\r\n        )}\r\n      </ul>\r\n      {selectedOrder && (\r\n        <div id=\"map-section\">\r\n          <h3>Live Location for Order ID: {selectedOrder._id}</h3>\r\n          <div id=\"map\" style={{ width: \"100%\", height: \"500px\" }}></div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeliveryBoyPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}